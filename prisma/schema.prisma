// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  url       String
  public_id String   @unique
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?  @db.ObjectId
}

model Product {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String      @unique
  category      String
  description   String
  color         String
  weight        String
  mrpPrice      String
  discountPrice String
  quantity      String
  images        Image[]
  OrderItem     OrderItem[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Address {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  company   String?
  street    String
  apartment String
  city      String
  state     String
  pincode   Int
  phone     String
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  OrderDate   DateTime    @default(now())
  userEmail   String      @unique
  status      String
  totalAmount Float
  paymentType String
  addressId   String      @db.ObjectId
  address     Address     @relation(fields: [addressId], references: [id])
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  Order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?  @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
